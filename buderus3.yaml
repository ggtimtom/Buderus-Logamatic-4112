esphome:
  name: buderus3
  friendly_name: Buderus3
  compile_process_limit: 1
  includes:
    - Buderus.h

esp8266:
  board: esp01_1m

# Enable logging
logger:
  level: VERBOSE #makes uart stream available in esphome logstream
  baud_rate: 0 #disable logging over uart
# Enable Home Assistant API
api:
  encryption:
    key: "secret"

ota:
  password: "secret"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Buderus3 Fallback Hotspot"
    password: "secret"


uart:
  id: uart_bus
  tx_pin: GPIO1
  rx_pin: GPIO3
  baud_rate: 1200

sensor:
- platform: custom
  lambda: |-
    auto my_sensor = new UartReadLineSensor(id(uart_bus));
    App.register_component(my_sensor);
    return {my_sensor->SolarKollektor_temperature_sensor, my_sensor->Solarspeicher_temperature_sensor, my_sensor->WarmwasserIst_temperature_sensor, my_sensor->Aussentemperatur_temperature_sensor, my_sensor->GedAussentemperatur_temperature_sensor, my_sensor->AnlagenvorlaufSoll_temperature_sensor, my_sensor->AnlagenvorlaufIst_temperature_sensor};

  sensors:
  - name: "Solarkollektor Temperatur"
    unit_of_measurement: °C
    accuracy_decimals: 0
  - name: "Solarspeicher Temperatur"
    unit_of_measurement: °C
    accuracy_decimals: 0
  - name: "WarmwasserIst Temperatur"
    unit_of_measurement: °C
    accuracy_decimals: 0
  - name: "Aussen Temperatur"
    unit_of_measurement: °C
    accuracy_decimals: 0
  - name: "Ged. Aussen Temperatur"
    unit_of_measurement: °C
    accuracy_decimals: 0
  - name: "Anlagenvorlauf Soll Temperatur"
    unit_of_measurement: °C
    accuracy_decimals: 0
  - name: "Anlagenvorlauf Ist Temperatur"
    unit_of_measurement: °C
    accuracy_decimals: 0

text_sensor:
- platform: custom
  lambda: |-
    auto my_custom_sensor = new UartReadLineSensor(id(uart_bus));
    App.register_component(my_custom_sensor);
    return {my_custom_sensor};
  text_sensors:
    id: "uart_readline"


captive_portal:
